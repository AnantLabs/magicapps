
#* 
	This is an example velocity template
*#
<nameFile>main_$table</nameFile>
<extensionFile>aspx.cs</extensionFile>
<languageGenerated>c_sharp</languageGenerated>
<description>description</description>
<targetDirectory>${table}_dir</targetDirectory>
<appliesToAllTables>true</appliesToAllTables>

#foreach( $relation in $table.getRelations() )

name of relation ${relation.name} 

 
        public static ${table} get${table}By${relation.parentField()} (int  ${relation.parentField} )
        {
            ${table} ${table}x = new ${table}();
            System.Data.SqlClient.SqlDataReader reg;
            string sqlt;
                ${table} obj${table} = new ${table}();


            dbClass db = new dbClass(ctes.conStringAdoGeneral);
            try
            {
            sqlt = "select * from ${relation.ChildTable()}";
          
            sqlt += " where ${relation.parentField()}=" + sf.cadena(${relation.parentField()});  

            reg = db.sql(sqlt);
            if (reg.Read())
            {
          
			#foreach( $field in $table.GetArrayOfFields )                         

			#if ($field.type.toString() == "_integer")
			 obj${table}.${field} = sf.entero(reg["${field}"].ToString());
			 #end
			#if ($field.type.toString() == "_string")
			 obj${table}.${field} = sf.cadena(reg["${field}"].ToString());	  					
			 #end
			#if ($field.type.toString() == "_date")
			obj${table}.${field} = sf.fecha(reg["${field}"].ToString());
			 #end
			#if ($field.type.toString() == "_boolean")
			 obj${table}.${field} = sf.boolean(reg["${field}"].ToString());
			 #end
			#if ($field.type.toString() == "_double")
			 obj${table}.${field} = sf.doble(reg["${field}"].ToString());
			 #end                             

			#end		 
            
               }
            reg.Close(); 
            }
            catch (Exception ex)
            {
                // Argument is optional, no "When" keyword 
            }
            finally
            {
                db.Dispose();
              
            }
            return  obj${table} ;
       }
    
	
	 public void delete${relation.fieldTable()}By${relation.childField()} (int ${relation.parentField()}x)
	 {
		 dbClass db=new  dbClass(ctes.conStringAdoGeneral);
		 String  sqlt;
		 
		try
		{
		  sqlt = " delete from ${table} where ${relation.childField()}=" + ${relation.parentField()}x ;
			db.ejecutar(sqlt);
		}
		finally
		{db.Dispose();}
		  

	}  
	

#end