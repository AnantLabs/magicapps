#* 
	comments: 
	
	Author: Luis Molina
*#  

<nameFile>${table}_extra</nameFile>
<extensionFile>cs</extensionFile>
<languageGenerated>c_sharp</languageGenerated>
<description>description</description>
<targetDirectory></targetDirectory>
<appliesToAllTables>true</appliesToAllTables>


using System;
    using System.Collections.Generic;
    using MySql.Data.MySqlClient;   
using System.Text;
using System.IO;
using System.Data;
using System.Web;

public partial class ${table}
{
 
  	public static List< ${table} > getListByPortal(int idportal)
		{
 
		    List< ${table} > lista${table} = new List< ${table} >();
            MySqlDataReader reg;
            string sqlt;
            dbClass db = new dbClass(ctes.conStringAdoGeneral);
            try
            {
            sqlt = "select ${table.getListOfFields(",")} from ${table} where idportal=" + idportal;
            reg = db.sql(sqlt);
            while (reg.Read())
                {
               ${table} pp = new ${table}();
#foreach( $field in $table.GetArrayOfFields ) 
	 
	 
		  #if ($field.type.toString() == "_integer")
		     pp.${field} = sf.entero(reg["${field}"].ToString());
		     #end 
		  #if ($field.type.toString() == "_string")
		     pp.${field} = sf.cadena(reg["${field}"].ToString());
		     #end 
		  #if ($field.type.toString() == "_date")
		     pp.${field} = sf.fecha(reg["${field}"].ToString());
		     #end 
		  #if ($field.type.toString() == "_boolean")
		     pp.${field} = sf.Bool(reg["${field}"].ToString());
		     #end 
		  
#end 
               lista${table}.Add(pp);
               }
            reg.Close();
            }
            catch (Exception ex)
            {
                 
            }
            finally
            {
                db.Dispose();
              
            }
            return lista${table};
       }		

 

// returns number of registers in the table... (for pagination)
 public static int getCount ()
		{
           
            MySqlDataReader reg;
            string sqlt;
            int retorno=0;
           
            dbClass db = new dbClass(ctes.conStringAdoGeneral);
            try
            {
            sqlt = "select count(*) as cont from ${table}";
                     
            reg = db.sql(sqlt);
            if (reg.Read()) 
			{
				retorno=sf.entero(reg["cont"].ToString());
			}
            else retorno=0;
               
            reg.Close();
            }
            catch (Exception ex)
            {
                // Argument is optional, no "When" keyword 
            }
            finally
            {
                db.Dispose();
              
            }
            return  retorno;
       } // count
 
 
 // devuelve una lista de ${table} para paginacion...
 
 		public static List<${table}> getPage(int num, int tamPag)
		{
		    List< ${table} > lista${table} = new List< ${table} >();
            MySqlDataReader reg;
            string sqlt;
            dbClass db = new dbClass(ctes.conStringAdoGeneral);
            try
            {
            sqlt = "select ${table.getListOfFields(",")} from ${table} limit " + sf.cadena(num*tamPag) + "," + sf.cadena(tamPag);
            reg = db.sql(sqlt);
            while (reg.Read())
                {
                ${table} pp = new ${table}();
#foreach( $field in $table.GetArrayOfFields ) 	 
		  #if ($field.type.toString() == "_integer")
		     pp.${field} = sf.entero(reg["${field}"].ToString());
		     #end 
		  #if ($field.type.toString() == "_string")
		     pp.${field} = sf.cadena(reg["${field}"].ToString());
		     #end 
		  #if ($field.type.toString() == "_date")
		     pp.${field} = sf.fecha(reg["${field}"].ToString());
		     #end 
		  #if ($field.type.toString() == "_boolean")
		     pp.${field} = sf.Bool(reg["${field}"].ToString());
		     #end 
#end 
               lista${table}.Add(pp);
               }
            reg.Close();
            }
            catch (Exception ex)
            {
                 
            }
            finally
            {
                db.Dispose();
              
            }
            return lista${table};
       }		// getPage
 
 
 


 
}






 
