<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="diagramControl2.Document" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAGBOZXRyb24uRGlhZ3JhbW1pbmcuQ29yZSwgVmVyc2lvbj0zLjAu
        MjcyNy44NzU0LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTljNDgxN2NjZmE2Y2QyYjEF
        AQAAACBOZXRyb24uRGlhZ3JhbW1pbmcuQ29yZS5Eb2N1bWVudAIAAAALSW5mb3JtYXRpb24FTW9kZWwE
        BCtOZXRyb24uRGlhZ3JhbW1pbmcuQ29yZS5Eb2N1bWVudEluZm9ybWF0aW9uAgAAAB1OZXRyb24uRGlh
        Z3JhbW1pbmcuQ29yZS5Nb2RlbAIAAAACAAAACQMAAAAJBAAAAAUDAAAAK05ldHJvbi5EaWFncmFtbWlu
        Zy5Db3JlLkRvY3VtZW50SW5mb3JtYXRpb24EAAAABkF1dGhvcgxDcmVhdGlvbkRhdGULRGVzY3JpcHRp
        b24FVGl0bGUBAAEBDQIAAAAGBQAAAAAApGYD3Y/MCAkFAAAACQUAAAAFBAAAAB1OZXRyb24uRGlhZ3Jh
        bW1pbmcuQ29yZS5Nb2RlbAEAAAAFUGFnZXMEqwFOZXRyb24uRGlhZ3JhbW1pbmcuQ29yZS5Db2xsZWN0
        aW9uQmFzZWAxW1tOZXRyb24uRGlhZ3JhbW1pbmcuQ29yZS5JUGFnZSwgTmV0cm9uLkRpYWdyYW1taW5n
        LkNvcmUsIFZlcnNpb249My4wLjI3MjcuODc1NCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
        bj05YzQ4MTdjY2ZhNmNkMmIxXV0CAAAAAgAAAAkGAAAABQYAAACrAU5ldHJvbi5EaWFncmFtbWluZy5D
        b3JlLkNvbGxlY3Rpb25CYXNlYDFbW05ldHJvbi5EaWFncmFtbWluZy5Db3JlLklQYWdlLCBOZXRyb24u
        RGlhZ3JhbW1pbmcuQ29yZSwgVmVyc2lvbj0zLjAuMjcyNy44NzU0LCBDdWx0dXJlPW5ldXRyYWwsIFB1
        YmxpY0tleVRva2VuPTljNDgxN2NjZmE2Y2QyYjFdXQEAAAAJSW5uZXJMaXN0A6QBU3lzdGVtLkNvbGxl
        Y3Rpb25zLkdlbmVyaWMuTGlzdGAxW1tOZXRyb24uRGlhZ3JhbW1pbmcuQ29yZS5JUGFnZSwgTmV0cm9u
        LkRpYWdyYW1taW5nLkNvcmUsIFZlcnNpb249My4wLjI3MjcuODc1NCwgQ3VsdHVyZT1uZXV0cmFsLCBQ
        dWJsaWNLZXlUb2tlbj05YzQ4MTdjY2ZhNmNkMmIxXV0CAAAACQcAAAAEBwAAAKQBU3lzdGVtLkNvbGxl
        Y3Rpb25zLkdlbmVyaWMuTGlzdGAxW1tOZXRyb24uRGlhZ3JhbW1pbmcuQ29yZS5JUGFnZSwgTmV0cm9u
        LkRpYWdyYW1taW5nLkNvcmUsIFZlcnNpb249My4wLjI3MjcuODc1NCwgQ3VsdHVyZT1uZXV0cmFsLCBQ
        dWJsaWNLZXlUb2tlbj05YzQ4MTdjY2ZhNmNkMmIxXV0DAAAABl9pdGVtcwVfc2l6ZQhfdmVyc2lvbgQA
        AB9OZXRyb24uRGlhZ3JhbW1pbmcuQ29yZS5JUGFnZVtdAgAAAAgICQgAAAABAAAAAQAAAAcIAAAAAAEA
        AAAEAAAABB1OZXRyb24uRGlhZ3JhbW1pbmcuQ29yZS5JUGFnZQIAAAAJCQAAAA0DBQkAAAAcTmV0cm9u
        LkRpYWdyYW1taW5nLkNvcmUuUGFnZQIAAAAIQW1iaWVuY2UGTGF5ZXJzBAQgTmV0cm9uLkRpYWdyYW1t
        aW5nLkNvcmUuQW1iaWVuY2UCAAAArAFOZXRyb24uRGlhZ3JhbW1pbmcuQ29yZS5Db2xsZWN0aW9uQmFz
        ZWAxW1tOZXRyb24uRGlhZ3JhbW1pbmcuQ29yZS5JTGF5ZXIsIE5ldHJvbi5EaWFncmFtbWluZy5Db3Jl
        LCBWZXJzaW9uPTMuMC4yNzI3Ljg3NTQsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49OWM0
        ODE3Y2NmYTZjZDJiMV1dAgAAAAIAAAAJCgAAAAkLAAAADAwAAABRU3lzdGVtLkRyYXdpbmcsIFZlcnNp
        b249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iMDNmNWY3ZjExZDUwYTNh
        BQoAAAAgTmV0cm9uLkRpYWdyYW1taW5nLkNvcmUuQW1iaWVuY2UBAAAAD0JhY2tncm91bmRDb2xvcgQU
        U3lzdGVtLkRyYXdpbmcuQ29sb3IMAAAAAgAAAAXz////FFN5c3RlbS5EcmF3aW5nLkNvbG9yBAAAAARu
        YW1lBXZhbHVlCmtub3duQ29sb3IFc3RhdGUBAAAACQcHDAAAAAoAAAAAAAAAAKQAAQAFCwAAAKwBTmV0
        cm9uLkRpYWdyYW1taW5nLkNvcmUuQ29sbGVjdGlvbkJhc2VgMVtbTmV0cm9uLkRpYWdyYW1taW5nLkNv
        cmUuSUxheWVyLCBOZXRyb24uRGlhZ3JhbW1pbmcuQ29yZSwgVmVyc2lvbj0zLjAuMjcyNy44NzU0LCBD
        dWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTljNDgxN2NjZmE2Y2QyYjFdXQEAAAAJSW5uZXJM
        aXN0A6UBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuTGlzdGAxW1tOZXRyb24uRGlhZ3JhbW1pbmcu
        Q29yZS5JTGF5ZXIsIE5ldHJvbi5EaWFncmFtbWluZy5Db3JlLCBWZXJzaW9uPTMuMC4yNzI3Ljg3NTQs
        IEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49OWM0ODE3Y2NmYTZjZDJiMV1dAgAAAAkOAAAA
        BA4AAAClAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkxpc3RgMVtbTmV0cm9uLkRpYWdyYW1taW5n
        LkNvcmUuSUxheWVyLCBOZXRyb24uRGlhZ3JhbW1pbmcuQ29yZSwgVmVyc2lvbj0zLjAuMjcyNy44NzU0
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTljNDgxN2NjZmE2Y2QyYjFdXQMAAAAGX2l0
        ZW1zBV9zaXplCF92ZXJzaW9uBAAAIE5ldHJvbi5EaWFncmFtbWluZy5Db3JlLklMYXllcltdAgAAAAgI
        CQ8AAAABAAAAAQAAAAcPAAAAAAEAAAAEAAAABB5OZXRyb24uRGlhZ3JhbW1pbmcuQ29yZS5JTGF5ZXIC
        AAAACRAAAAANAwUQAAAAHU5ldHJvbi5EaWFncmFtbWluZy5Db3JlLkxheWVyAgAAAAROYW1lCEVudGl0
        aWVzAQS0AU5ldHJvbi5EaWFncmFtbWluZy5Db3JlLkNvbGxlY3Rpb25CYXNlYDFbW05ldHJvbi5EaWFn
        cmFtbWluZy5Db3JlLklEaWFncmFtRW50aXR5LCBOZXRyb24uRGlhZ3JhbW1pbmcuQ29yZSwgVmVyc2lv
        bj0zLjAuMjcyNy44NzU0LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTljNDgxN2NjZmE2
        Y2QyYjFdXQIAAAACAAAABhEAAAANRGVmYXVsdCBMYXllcgkSAAAABRIAAAC0AU5ldHJvbi5EaWFncmFt
        bWluZy5Db3JlLkNvbGxlY3Rpb25CYXNlYDFbW05ldHJvbi5EaWFncmFtbWluZy5Db3JlLklEaWFncmFt
        RW50aXR5LCBOZXRyb24uRGlhZ3JhbW1pbmcuQ29yZSwgVmVyc2lvbj0zLjAuMjcyNy44NzU0LCBDdWx0
        dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTljNDgxN2NjZmE2Y2QyYjFdXQEAAAAJSW5uZXJMaXN0
        A60BU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuTGlzdGAxW1tOZXRyb24uRGlhZ3JhbW1pbmcuQ29y
        ZS5JRGlhZ3JhbUVudGl0eSwgTmV0cm9uLkRpYWdyYW1taW5nLkNvcmUsIFZlcnNpb249My4wLjI3Mjcu
        ODc1NCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj05YzQ4MTdjY2ZhNmNkMmIxXV0CAAAA
        CRMAAAAEEwAAAK0BU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuTGlzdGAxW1tOZXRyb24uRGlhZ3Jh
        bW1pbmcuQ29yZS5JRGlhZ3JhbUVudGl0eSwgTmV0cm9uLkRpYWdyYW1taW5nLkNvcmUsIFZlcnNpb249
        My4wLjI3MjcuODc1NCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj05YzQ4MTdjY2ZhNmNk
        MmIxXV0DAAAABl9pdGVtcwVfc2l6ZQhfdmVyc2lvbgQAAChOZXRyb24uRGlhZ3JhbW1pbmcuQ29yZS5J
        RGlhZ3JhbUVudGl0eVtdAgAAAAgICRQAAAAAAAAAAAAAAAcUAAAAAAEAAAAAAAAABCZOZXRyb24uRGlh
        Z3JhbW1pbmcuQ29yZS5JRGlhZ3JhbUVudGl0eQIAAAAL
</value>
  </data>
</root>